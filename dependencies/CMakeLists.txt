cmake_minimum_required (VERSION 3.8)

file(GLOB DEPENDENCIES_DIRECTORIES LIST_DIRECTORIES true *)
file(GLOB DEPENDENCIES_FILES LIST_DIRECTORIES false *)

foreach(DEPENDENCIES_FILE ${DEPENDENCIES_FILES})
    list(REMOVE_ITEM DEPENDENCIES_DIRECTORIES ${DEPENDENCIES_FILE})
endforeach()

set(PROJECT_LIBRARIES "")

foreach(DEPENDENCIES_DIRECTORY ${DEPENDENCIES_DIRECTORIES})
    message("${DEPENDENCIES_DIRECTORY}")
    get_filename_component(DEPENDENCIES_NAME ${DEPENDENCIES_DIRECTORY} NAME)
    add_subdirectory(${DEPENDENCIES_DIRECTORY})
    add_dependencies(${PROJECT_TARGET} ${DEPENDENCIES_NAME})
    get_target_property(DEPENDENCIES_TYPE ${DEPENDENCIES_NAME} TYPE)
    if(EXISTS "${DEPENDENCIES_DIRECTORY}/include")
        target_include_directories(${PROJECT_TARGET} PUBLIC "${DEPENDENCIES_DIRECTORY}/include")
    endif()
    if(EXISTS "${DEPENDENCIES_DIRECTORY}/lib" OR "${DEPENDENCIES_TYPE}" MATCHES "LIBRARY$")
        target_link_directories(${PROJECT_TARGET} PUBLIC "${DEPENDENCIES_DIRECTORY}/lib")
        list(APPEND PROJECT_LIBRARIES ${DEPENDENCIES_NAME})
    endif()
    get_target_property(DEPENDENCIES_LIBRARIES_DIRECTORIES ${DEPENDENCIES_NAME} INTERFACE_LINK_DIRECTORIES)
    if(NOT "${DEPENDENCIES_LIBRARIES_DIRECTORIES}" MATCHES "NOTFOUND$")
        target_link_directories(${PROJECT_TARGET} PUBLIC ${DEPENDENCIES_LIBRARIES_DIRECTORIES})
    endif()
    get_target_property(DEPENDENCIES_LIBRARIES ${DEPENDENCIES_NAME} INTERFACE_LINK_LIBRARIES)
    if(NOT "${DEPENDENCIES_LIBRARIES}" MATCHES "NOTFOUND$")
        list(APPEND PROJECT_LIBRARIES ${DEPENDENCIES_NAME} ${DEPENDENCIES_LIBRARIES})
    endif()
endforeach()

set(PROJECT_LIBRARIES "${PROJECT_LIBRARIES}" PARENT_SCOPE)
